parameters:
  - name: service_connection
  - name: resource_group_name
  - name: workspace_name
  - name: service_name
  - name: deployment_config
  - name: environment
  - name: compute_type
    values:
      - aci
      - aks
  - name: compute_target
    default: "''"

jobs:
  - job: deploy_model
    displayName: ${{ upper( parameters.compute_type ) }} deployment

    variables:
      - template: ../variables.yml

    steps:
      - task: AzureCLI@2
        displayName: Install azure-cli-ml
        inputs:
          azureSubscription: $(service_connection)
          scriptType: bash
          scriptLocation: inlineScript
          inlineScript: az extension add -n azure-cli-ml

      - task: DownloadBuildArtifacts@0
        displayName: Download model metadata artifact
        inputs:
          artifactName: $(model_artifact_name)

      - task: AzureCLI@2
        displayName: Set subscription
        inputs:
          azureSubscription: $(service_connection)
          scriptType: bash
          scriptLocation: inlineScript
          inlineScript: |
            # Fail on error
            set -e

            # Get subscription id
            MODEL_ID=$(jq ".id" $(model_metadata_file_path) --raw-output)

            # Set variable for pipeline
            echo "##vso[task.setvariable variable=model_id]$MODEL_ID"

      - task: AzureCLI@2
        displayName: Deploy to ${{ upper( parameters.compute_type ) }} (${{ lower( parameters.environment ) }})
        inputs:
          scriptType: bash
          azureSubscription: $(service_connection)
          scriptLocation: inlineScript
          inlineScript: |
            # az ml model deploy \
            # --workspace-name $(workspace_name) \
            # --resource-group $(resource_group_name) \
            # --inference-config-file $(inference_config) \
            # --model $(model_id) \
            # --name ${{ parameters.service_name }} \
            # --compute-type ${{ parameters.compute_type }} \
            # --deploy-config-file ${{ parameters.deployment_config }} \
            # --compute-target ${{ parameters.compute_target }} \
            # --tag build_id=$(Build.BuildId) \
            # --tag environment=${{ parameters.environment }} \
            # --overwrite

            az ml model deploy \
            --workspace-name $(workspace_name) \
            --resource-group $(resource_group_name) \
            --inference-config-file $(inference_config) \
            --model $(model_id) \
            --name ${{ parameters.service_name }} \
            --compute-type ${{ parameters.compute_type }} \
            --deploy-config-file ${{ parameters.deployment_config }} \
            --compute-target aks-test-cluster \
            --tag build_id=$(Build.BuildId) \
            --tag environment=${{ parameters.environment }} \
            --overwrite
